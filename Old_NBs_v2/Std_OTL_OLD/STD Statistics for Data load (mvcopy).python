{"version":"NotebookV1","origId":2709619314155856,"name":"STD Statistics for Data load (mvcopy)","language":"python","commands":[{"version":"CommandV1","origId":2709619314155857,"guid":"3a6e9400-ca38-4f92-a8dd-00fddbab2f50","subtype":"command","commandType":"auto","position":1.0,"command":"#%run \"/EDA/Data Engineer/Framework/Secrets-Databricks-Cache\"","commandVersion":4,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{}},"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1663160866311,"submitTime":1663160858987,"finishTime":1663160866372,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["html",27]],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"3fef04d3-2bdb-40c2-b6d4-ccb174017251"},{"version":"CommandV1","origId":2709619314155858,"guid":"68fd96e7-f906-4e23-a8f6-7992b3b3bd72","subtype":"command","commandType":"auto","position":2.0,"command":"# SET ENVIRONMENT FOR DATA LAKE (02 OR 10 OR etc)\ndbutils.widgets.text(\"env\", \"02\", \"ADLS ENVIRONMENT\")\nenv = dbutils.widgets.get(\"env\")\n\n#SET BASEPATH\nbasepath = 'abfss://dev@dtecuprodedaadl' + env + '.dfs.core.windows.net/'\n\n#SET SEGREGATED LOCATION PATH \ndbutils.widgets.text(\"segregated_loc\", \"raw/ISU_archive/segregated\", \"SEGREGATED LOC\")\nsegregated_loc = basepath + dbutils.widgets.get(\"segregated_loc\")\n\n#SET STAGING COLLECTED LOCATION PATH \ndbutils.widgets.text(\"staging_collected_loc\", \"raw/ISU_archive/staging_collected\", \"STAGING COLLECTED LOC\")\nstaging_collected_loc = basepath + dbutils.widgets.get(\"staging_collected_loc\")\n\n#SET TARGET LOCATION PATH FOR LOGGING STATISTICS EXCELS\ndbutils.widgets.text(\"statistics_loc\", \"ISU_archive_support/statistics\", \"STATISTICS LOC\")\nstatistics_loc = basepath + dbutils.widgets.get(\"statistics_loc\")","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{"segregated_loc":"raw/ISU_archive/segregated","statistics_loc":"ISU_archive_support/statistics","env":"10","staging_collected_loc":"raw/ISU_archive/staging_collected"},"addedWidgets":{"segregated_loc":{"widgetType":"text","name":"segregated_loc","defaultValue":"raw/ISU_archive/segregated","label":"SEGREGATED LOC","options":{"widgetType":"text","validationRegex":null}},"statistics_loc":{"widgetType":"text","name":"statistics_loc","defaultValue":"ISU_archive_support/statistics","label":"STATISTICS LOC","options":{"widgetType":"text","validationRegex":null}},"env":{"widgetType":"text","name":"env","defaultValue":"02","label":"ADLS ENVIRONMENT","options":{"widgetType":"text","validationRegex":null}},"staging_collected_loc":{"widgetType":"text","name":"staging_collected_loc","defaultValue":"raw/ISU_archive/staging_collected","label":"STAGING COLLECTED LOC","options":{"widgetType":"text","validationRegex":null}}},"removedWidgets":[],"datasetInfos":[],"metadata":{}},"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1663160866394,"submitTime":1663160859020,"finishTime":1663160866428,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["html",27]],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"102e32aa-1023-435a-a6c8-14f06f240148"},{"version":"CommandV1","origId":2709619314155859,"guid":"0a397ea3-fa0f-482e-9ff9-527458c02e33","subtype":"command","commandType":"auto","position":3.0,"command":"print(\"basepath : \" + basepath)\nprint(\"segregated_loc : \" + segregated_loc)\nprint(\"staging_collected_loc : \" + staging_collected_loc)\nprint(\"statistics_loc : \" + statistics_loc)","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">basepath : abfss://dev@dtecuprodedaadl10.dfs.core.windows.net/\nsegregated_loc : abfss://dev@dtecuprodedaadl10.dfs.core.windows.net/raw/ISU_archive/segregated\nstaging_collected_loc : abfss://dev@dtecuprodedaadl10.dfs.core.windows.net/raw/ISU_archive/staging_collected\nstatistics_loc : abfss://dev@dtecuprodedaadl10.dfs.core.windows.net/ISU_archive_support/statistics\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{}},"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":1663160866450,"submitTime":1663160859061,"finishTime":1663160866475,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"6761","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["html",393]],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"c9e95f05-d4e5-407f-a505-62ce770dce08"},{"version":"CommandV1","origId":2709619314155860,"guid":"6a90a6a4-8599-4940-9230-5a529a8f8944","subtype":"command","commandType":"auto","position":4.0,"command":"%md\n# Row Count per File","commandVersion":1,"state":"finished","results":null,"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":null,"subcommandOptions":null,"contentSha256Hex":null,"nuid":"1593833c-483f-43d1-b2e3-5b2a87d162d4"},{"version":"CommandV1","origId":2709619314155861,"guid":"f864f490-769d-4791-b6e6-75a59fd29e31","subtype":"command","commandType":"auto","position":5.0,"command":"from pyspark.sql import functions as F\nfrom pyspark.sql.functions import split\nfrom pyspark.sql.functions import *\n\n#FOR DAILY LOAD STATS\n\ndf_csv = spark.read.csv(segregated_loc + \"/*\") \\\n    .withColumn(\"FilePath\", F.input_file_name()) \\\n    .groupby(\"FilePath\") \\\n    .agg(F.count(\"*\").alias(\"Row_Count_per_file\"))\ndf = df_csv.withColumn(\"FileNameRaw\", split((\"FilePath\"), \"/\").getItem(7))\ndf1 = df.withColumn(\"TableName\", split((\"FilePath\"), \"/\").getItem(6))\nnewDf = df1.withColumn('FileName', regexp_replace('FileNameRaw', '%23', '#'))\ndisplay(newDf[[\"FileName\", \"TableName\", \"Row_Count_per_file\"]])","commandVersion":1,"state":"error","results":{"type":"html","data":"<div class=\"ansiout\"></div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{}},"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":"Failure to initialize configurationInvalid configuration value detected for fs.azure.account.key","errorTraceType":"html","error":"<div class=\"ansiout\"><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">Py4JJavaError</span>                             Traceback (most recent call last)\n<span class=\"ansi-green-fg\">&lt;command-372541917134498&gt;</span> in <span class=\"ansi-cyan-fg\">&lt;module&gt;</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">      5</span> <span class=\"ansi-red-fg\">#FOR DAILY LOAD STATS</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">      6</span> \n<span class=\"ansi-green-fg\">----&gt; 7</span><span class=\"ansi-red-fg\"> </span>df_csv <span class=\"ansi-blue-fg\">=</span> spark<span class=\"ansi-blue-fg\">.</span>read<span class=\"ansi-blue-fg\">.</span>csv<span class=\"ansi-blue-fg\">(</span>segregated_loc <span class=\"ansi-blue-fg\">+</span> <span class=\"ansi-blue-fg\">&#34;/*&#34;</span><span class=\"ansi-blue-fg\">)</span><span class=\"ansi-red-fg\"> </span><span class=\"ansi-red-fg\">\\</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">      8</span>     <span class=\"ansi-blue-fg\">.</span>withColumn<span class=\"ansi-blue-fg\">(</span><span class=\"ansi-blue-fg\">&#34;FilePath&#34;</span><span class=\"ansi-blue-fg\">,</span> F<span class=\"ansi-blue-fg\">.</span>input_file_name<span class=\"ansi-blue-fg\">(</span><span class=\"ansi-blue-fg\">)</span><span class=\"ansi-blue-fg\">)</span><span class=\"ansi-red-fg\"> </span><span class=\"ansi-red-fg\">\\</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">      9</span>     <span class=\"ansi-blue-fg\">.</span>groupby<span class=\"ansi-blue-fg\">(</span><span class=\"ansi-blue-fg\">&#34;FilePath&#34;</span><span class=\"ansi-blue-fg\">)</span><span class=\"ansi-red-fg\"> </span><span class=\"ansi-red-fg\">\\</span>\n\n<span class=\"ansi-green-fg\">/databricks/spark/python/pyspark/sql/readwriter.py</span> in <span class=\"ansi-cyan-fg\">csv</span><span class=\"ansi-blue-fg\">(self, path, schema, sep, encoding, quote, escape, comment, header, inferSchema, ignoreLeadingWhiteSpace, ignoreTrailingWhiteSpace, nullValue, nanValue, positiveInf, negativeInf, dateFormat, timestampFormat, maxColumns, maxCharsPerColumn, maxMalformedLogPerPartition, mode, columnNameOfCorruptRecord, multiLine, charToEscapeQuoteEscaping, samplingRatio, enforceSchema, emptyValue, locale, lineSep, pathGlobFilter, recursiveFileLookup)</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    533</span>             path <span class=\"ansi-blue-fg\">=</span> <span class=\"ansi-blue-fg\">[</span>path<span class=\"ansi-blue-fg\">]</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    534</span>         <span class=\"ansi-green-fg\">if</span> type<span class=\"ansi-blue-fg\">(</span>path<span class=\"ansi-blue-fg\">)</span> <span class=\"ansi-blue-fg\">==</span> list<span class=\"ansi-blue-fg\">:</span>\n<span class=\"ansi-green-fg\">--&gt; 535</span><span class=\"ansi-red-fg\">             </span><span class=\"ansi-green-fg\">return</span> self<span class=\"ansi-blue-fg\">.</span>_df<span class=\"ansi-blue-fg\">(</span>self<span class=\"ansi-blue-fg\">.</span>_jreader<span class=\"ansi-blue-fg\">.</span>csv<span class=\"ansi-blue-fg\">(</span>self<span class=\"ansi-blue-fg\">.</span>_spark<span class=\"ansi-blue-fg\">.</span>_sc<span class=\"ansi-blue-fg\">.</span>_jvm<span class=\"ansi-blue-fg\">.</span>PythonUtils<span class=\"ansi-blue-fg\">.</span>toSeq<span class=\"ansi-blue-fg\">(</span>path<span class=\"ansi-blue-fg\">)</span><span class=\"ansi-blue-fg\">)</span><span class=\"ansi-blue-fg\">)</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    536</span>         <span class=\"ansi-green-fg\">elif</span> isinstance<span class=\"ansi-blue-fg\">(</span>path<span class=\"ansi-blue-fg\">,</span> RDD<span class=\"ansi-blue-fg\">)</span><span class=\"ansi-blue-fg\">:</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    537</span>             <span class=\"ansi-green-fg\">def</span> func<span class=\"ansi-blue-fg\">(</span>iterator<span class=\"ansi-blue-fg\">)</span><span class=\"ansi-blue-fg\">:</span>\n\n<span class=\"ansi-green-fg\">/databricks/spark/python/lib/py4j-0.10.9-src.zip/py4j/java_gateway.py</span> in <span class=\"ansi-cyan-fg\">__call__</span><span class=\"ansi-blue-fg\">(self, *args)</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">   1303</span>         answer <span class=\"ansi-blue-fg\">=</span> self<span class=\"ansi-blue-fg\">.</span>gateway_client<span class=\"ansi-blue-fg\">.</span>send_command<span class=\"ansi-blue-fg\">(</span>command<span class=\"ansi-blue-fg\">)</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">   1304</span>         return_value = get_return_value(\n<span class=\"ansi-green-fg\">-&gt; 1305</span><span class=\"ansi-red-fg\">             answer, self.gateway_client, self.target_id, self.name)\n</span><span class=\"ansi-green-intense-fg ansi-bold\">   1306</span> \n<span class=\"ansi-green-intense-fg ansi-bold\">   1307</span>         <span class=\"ansi-green-fg\">for</span> temp_arg <span class=\"ansi-green-fg\">in</span> temp_args<span class=\"ansi-blue-fg\">:</span>\n\n<span class=\"ansi-green-fg\">/databricks/spark/python/pyspark/sql/utils.py</span> in <span class=\"ansi-cyan-fg\">deco</span><span class=\"ansi-blue-fg\">(*a, **kw)</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    125</span>     <span class=\"ansi-green-fg\">def</span> deco<span class=\"ansi-blue-fg\">(</span><span class=\"ansi-blue-fg\">*</span>a<span class=\"ansi-blue-fg\">,</span> <span class=\"ansi-blue-fg\">**</span>kw<span class=\"ansi-blue-fg\">)</span><span class=\"ansi-blue-fg\">:</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    126</span>         <span class=\"ansi-green-fg\">try</span><span class=\"ansi-blue-fg\">:</span>\n<span class=\"ansi-green-fg\">--&gt; 127</span><span class=\"ansi-red-fg\">             </span><span class=\"ansi-green-fg\">return</span> f<span class=\"ansi-blue-fg\">(</span><span class=\"ansi-blue-fg\">*</span>a<span class=\"ansi-blue-fg\">,</span> <span class=\"ansi-blue-fg\">**</span>kw<span class=\"ansi-blue-fg\">)</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    128</span>         <span class=\"ansi-green-fg\">except</span> py4j<span class=\"ansi-blue-fg\">.</span>protocol<span class=\"ansi-blue-fg\">.</span>Py4JJavaError <span class=\"ansi-green-fg\">as</span> e<span class=\"ansi-blue-fg\">:</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    129</span>             converted <span class=\"ansi-blue-fg\">=</span> convert_exception<span class=\"ansi-blue-fg\">(</span>e<span class=\"ansi-blue-fg\">.</span>java_exception<span class=\"ansi-blue-fg\">)</span>\n\n<span class=\"ansi-green-fg\">/databricks/spark/python/lib/py4j-0.10.9-src.zip/py4j/protocol.py</span> in <span class=\"ansi-cyan-fg\">get_return_value</span><span class=\"ansi-blue-fg\">(answer, gateway_client, target_id, name)</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    326</span>                 raise Py4JJavaError(\n<span class=\"ansi-green-intense-fg ansi-bold\">    327</span>                     <span class=\"ansi-blue-fg\">&#34;An error occurred while calling {0}{1}{2}.\\n&#34;</span><span class=\"ansi-blue-fg\">.</span>\n<span class=\"ansi-green-fg\">--&gt; 328</span><span class=\"ansi-red-fg\">                     format(target_id, &#34;.&#34;, name), value)\n</span><span class=\"ansi-green-intense-fg ansi-bold\">    329</span>             <span class=\"ansi-green-fg\">else</span><span class=\"ansi-blue-fg\">:</span>\n<span class=\"ansi-green-intense-fg ansi-bold\">    330</span>                 raise Py4JError(\n\n<span class=\"ansi-red-fg\">Py4JJavaError</span>: An error occurred while calling o333.csv.\n: Failure to initialize configurationInvalid configuration value detected for fs.azure.account.key\n\tat shaded.databricks.azurebfs.org.apache.hadoop.fs.azurebfs.services.SimpleKeyProvider.getStorageAccountKey(SimpleKeyProvider.java:51)\n\tat shaded.databricks.azurebfs.org.apache.hadoop.fs.azurebfs.AbfsConfiguration.getStorageAccountKey(AbfsConfiguration.java:556)\n\tat shaded.databricks.azurebfs.org.apache.hadoop.fs.azurebfs.AzureBlobFileSystemStore.initializeClient(AzureBlobFileSystemStore.java:1548)\n\tat shaded.databricks.azurebfs.org.apache.hadoop.fs.azurebfs.AzureBlobFileSystemStore.&lt;init&gt;(AzureBlobFileSystemStore.java:214)\n\tat shaded.databricks.azurebfs.org.apache.hadoop.fs.azurebfs.AzureBlobFileSystem.initialize(AzureBlobFileSystem.java:130)\n\tat org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:2669)\n\tat org.apache.hadoop.fs.FileSystem.get(FileSystem.java:370)\n\tat org.apache.hadoop.fs.Path.getFileSystem(Path.java:295)\n\tat org.apache.spark.sql.execution.datasources.DataSource$.$anonfun$checkAndGlobPathIfNecessary$1(DataSource.scala:812)\n\tat scala.collection.TraversableLike.$anonfun$flatMap$1(TraversableLike.scala:245)\n\tat scala.collection.immutable.List.foreach(List.scala:392)\n\tat scala.collection.TraversableLike.flatMap(TraversableLike.scala:245)\n\tat scala.collection.TraversableLike.flatMap$(TraversableLike.scala:242)\n\tat scala.collection.immutable.List.flatMap(List.scala:355)\n\tat org.apache.spark.sql.execution.datasources.DataSource$.checkAndGlobPathIfNecessary(DataSource.scala:810)\n\tat org.apache.spark.sql.execution.datasources.DataSource.checkAndGlobPathIfNecessary(DataSource.scala:618)\n\tat org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:438)\n\tat org.apache.spark.sql.DataFrameReader.loadV1Source(DataFrameReader.scala:384)\n\tat org.apache.spark.sql.DataFrameReader.$anonfun$load$2(DataFrameReader.scala:373)\n\tat scala.Option.getOrElse(Option.scala:189)\n\tat org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:373)\n\tat org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:825)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:380)\n\tat py4j.Gateway.invoke(Gateway.java:295)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.GatewayConnection.run(GatewayConnection.java:251)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: Invalid configuration value detected for fs.azure.account.key\n\tat shaded.databricks.azurebfs.org.apache.hadoop.fs.azurebfs.diagnostics.ConfigurationBasicValidator.validate(ConfigurationBasicValidator.java:49)\n\tat shaded.databricks.azurebfs.org.apache.hadoop.fs.azurebfs.diagnostics.Base64StringConfigurationBasicValidator.validate(Base64StringConfigurationBasicValidator.java:40)\n\tat shaded.databricks.azurebfs.org.apache.hadoop.fs.azurebfs.services.SimpleKeyProvider.validateStorageAccountKey(SimpleKeyProvider.java:70)\n\tat shaded.databricks.azurebfs.org.apache.hadoop.fs.azurebfs.services.SimpleKeyProvider.getStorageAccountKey(SimpleKeyProvider.java:49)\n\t... 32 more\n</div>","workflows":[],"startTime":1663160859122,"submitTime":1663160859122,"finishTime":1663160867298,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"931","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[["html",27]],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"efa1fc40-444e-4075-957e-2fc02bf1a9d3"},{"version":"CommandV1","origId":2709619314155862,"guid":"d849dee0-b610-4755-b9b7-2a63337271fe","subtype":"command","commandType":"auto","position":6.0,"command":"from pyspark.sql import functions as F\nfrom pyspark.sql.functions import split\nfrom pyspark.sql.functions import *\n\n#FOR TOTAL STATS\n\ndf_csv_tot = spark.read.csv(staging_collected_loc + \"/*\") \\\n    .withColumn(\"FilePath\", F.input_file_name()) \\\n    .groupby(\"FilePath\") \\\n    .agg(F.count(\"*\").alias(\"Row_Count_per_file\"))\ndf_tot = df_csv_tot.withColumn(\"FileNameRaw\", split((\"FilePath\"), \"/\").getItem(6))\ndf1_tot = df_tot.withColumn(\"TableName\", split((\"FileNameRaw\"), \"%23\").getItem(3))\nnewDf_tot = df1_tot.withColumn('FileName', regexp_replace('FileNameRaw', '%23', '#'))\ndisplay(newDf_tot[[\"FileName\", \"TableName\", \"Row_Count_per_file\"]])\n","commandVersion":1,"state":"error","results":null,"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":"Command skipped","errorTraceType":"html","error":null,"workflows":[],"startTime":1663160859132,"submitTime":1663160859132,"finishTime":1663160867345,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"936","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":null,"subcommandOptions":null,"contentSha256Hex":null,"nuid":"ddeaa4a4-3ff0-48d1-b7d8-b9d73f84d1d1"},{"version":"CommandV1","origId":2709619314155863,"guid":"b6620576-cea8-4999-825a-5ad2b7b05c2c","subtype":"command","commandType":"auto","position":7.0,"command":"%md\n# Total File Counts","commandVersion":1,"state":"finished","results":null,"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":null,"subcommandOptions":null,"contentSha256Hex":null,"nuid":"5e1845b5-3428-4e80-bd8f-8f94775c8175"},{"version":"CommandV1","origId":2709619314155864,"guid":"caee4500-d0d0-405b-8fd5-e7b82229967f","subtype":"command","commandType":"auto","position":8.0,"command":"newDf.count()","commandVersion":1,"state":"error","results":null,"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":"Command skipped","errorTraceType":"html","error":null,"workflows":[],"startTime":1663160859206,"submitTime":1663160859206,"finishTime":1663160867389,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":null,"subcommandOptions":null,"contentSha256Hex":null,"nuid":"4b358649-9312-4461-9aa6-4c35eda3e78d"},{"version":"CommandV1","origId":2709619314155865,"guid":"5183acab-e008-4303-9707-6ab6043366c1","subtype":"command","commandType":"auto","position":9.0,"command":"%md\n# Count of Files per Table","commandVersion":1,"state":"finished","results":null,"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":null,"subcommandOptions":null,"contentSha256Hex":null,"nuid":"5fbd03a3-d50a-43ff-8c26-83de6e090c6a"},{"version":"CommandV1","origId":2709619314155866,"guid":"65b00137-2932-4b92-a537-bf7c824a4c4b","subtype":"command","commandType":"auto","position":10.0,"command":"newDf2 =  newDf \\\n    .groupby(\"TableName\") \\\n    .agg(F.count(\"*\").alias(\"File_Count_per_Table\"))\n#display(newDf2[[\"TableName\",\"File_Count_per_Table\"]])\n\nnewDf2_tot =  newDf_tot \\\n    .groupby(\"TableName\") \\\n    .agg(F.count(\"*\").alias(\"File_Count_per_Table\"))","commandVersion":1,"state":"error","results":null,"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":"Command skipped","errorTraceType":"html","error":null,"workflows":[],"startTime":1663160859297,"submitTime":1663160859297,"finishTime":1663160867411,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":null,"subcommandOptions":null,"contentSha256Hex":null,"nuid":"75f34fa9-ee64-4be4-a090-3383b3c7d555"},{"version":"CommandV1","origId":2709619314155867,"guid":"a941750c-7906-43d9-84eb-90b2c3580b36","subtype":"command","commandType":"auto","position":11.0,"command":"%md\n# Rows per table","commandVersion":1,"state":"finished","results":null,"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":null,"subcommandOptions":null,"contentSha256Hex":null,"nuid":"1bedd7cc-fca9-49c6-b241-a93772606e5c"},{"version":"CommandV1","origId":2709619314155868,"guid":"73eb78c3-5357-4f44-bb6d-6cefa97faa16","subtype":"command","commandType":"auto","position":12.0,"command":"newDf3 =  newDf \\\n    .groupby(\"TableName\") \\\n    .agg(F.sum(\"Row_Count_per_file\").alias(\"Row_Count_per_Table\"))\n#display(newDf3[[\"TableName\",\"Row_Count_per_Table\"]])\n\nnewDf3_tot =  newDf_tot \\\n    .groupby(\"TableName\") \\\n    .agg(F.sum(\"Row_Count_per_file\").alias(\"Row_Count_per_Table\"))","commandVersion":1,"state":"error","results":null,"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":"Command skipped","errorTraceType":"html","error":null,"workflows":[],"startTime":1663160859382,"submitTime":1663160859382,"finishTime":1663160867435,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":null,"subcommandOptions":null,"contentSha256Hex":null,"nuid":"914e581e-9465-4d5d-b135-29db76e75728"},{"version":"CommandV1","origId":2709619314155869,"guid":"15e7d2aa-d506-407f-88bb-9ed07e46f933","subtype":"command","commandType":"auto","position":13.0,"command":"%md\n# History tables stats","commandVersion":1,"state":"finished","results":null,"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":null,"subcommandOptions":null,"contentSha256Hex":null,"nuid":"19748a4f-448d-474d-bbb1-68f7a4d3025e"},{"version":"CommandV1","origId":2709619314155870,"guid":"ac24cd2a-5950-4a7f-bcb5-e8aef4cc0ee0","subtype":"command","commandType":"auto","position":14.0,"command":"\ndftablename = spark.sql(f\"\"\"SHOW TABLES FROM cods_nonprod_historical like '*archive';\"\"\")\n#display(dftablename)","commandVersion":1,"state":"error","results":null,"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":"Command skipped","errorTraceType":"html","error":null,"workflows":[],"startTime":1663160859465,"submitTime":1663160859465,"finishTime":1663160867464,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":null,"subcommandOptions":null,"contentSha256Hex":null,"nuid":"d2731248-e71f-4452-87f2-94fc7a214df4"},{"version":"CommandV1","origId":2709619314155871,"guid":"2599fe1c-5c77-4a40-afd6-596c0592d2fe","subtype":"command","commandType":"auto","position":15.0,"command":"from pyspark.sql import SparkSession\nfrom pyspark.sql.types import *\nfrom pyspark.sql.functions import col\nfrom pyspark.sql.functions import lit\n\nspark = SparkSession.builder.appName('Empty_Dataframe').getOrCreate()\n\ncolumns = StructType([StructField('TOTAL_ROW_COUNT',\n                                  StringType(), True),\n                    StructField('TODAYS_MERGED_COUNT',\n                                  StringType(), True),\n                    StructField('TABLE_NAME',\n                                StringType(), True),\n                    StructField('DATABASE',\n                                StringType(), True)])\n\nempRDD = spark.sparkContext.emptyRDD()\n\ndffn1 = spark.createDataFrame(data = empRDD , schema = columns)\n\ndf_collect = dftablename.collect()\nfor row in df_collect:\n    var_db = row[\"database\"]\n    var_tn = row[\"tableName\"]\n    dffn2 = spark.sql(f\"\"\"SELECT  COUNT(*) as TOTAL_ROW_COUNT ,(SELECT  COUNT(*) FROM {var_db}.{var_tn} WHERE date(EDA_Creation_date) = current_date()) as TODAYS_MERGED_COUNT FROM {var_db}.{var_tn}\"\"\")    \n    dffn3 = dffn2.withColumn(\"TableName\",lit(var_tn))\n    dffn4 = dffn3.withColumn(\"Database\",lit(var_db))\n    dffn1 = dffn1.union(dffn4)\n#display(dffn1)","commandVersion":3,"state":"error","results":null,"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":"Command skipped","errorTraceType":"html","error":null,"workflows":[],"startTime":1663160859500,"submitTime":1663160859500,"finishTime":1663160867487,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"796","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":null,"subcommandOptions":null,"contentSha256Hex":null,"nuid":"ac69728c-13af-40a2-be11-66b0fa512be3"},{"version":"CommandV1","origId":2709619314155872,"guid":"669371ff-899f-4632-ad10-a34d64ac7ab0","subtype":"command","commandType":"auto","position":16.0,"command":"%md\n# Stream tables stats","commandVersion":1,"state":"finished","results":null,"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":null,"subcommandOptions":null,"contentSha256Hex":null,"nuid":"a2057fc8-c3da-4c74-b163-86cf8a1905fb"},{"version":"CommandV1","origId":2709619314155873,"guid":"6653d406-3d4c-4289-87c8-228945ce825e","subtype":"command","commandType":"auto","position":17.0,"command":"dfstreamtablename = spark.sql(f\"\"\"SHOW TABLES FROM cods_nonprod_active like '*current';\"\"\")\n#display(dfstreamtablename)","commandVersion":1,"state":"error","results":null,"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":"Command skipped","errorTraceType":"html","error":null,"workflows":[],"startTime":1663160859582,"submitTime":1663160859582,"finishTime":1663160867509,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":null,"subcommandOptions":null,"contentSha256Hex":null,"nuid":"3e580526-28b4-4b71-918e-a20f5277b9f3"},{"version":"CommandV1","origId":2709619314155874,"guid":"49c15e42-865c-4c51-9be2-cfbf2eac6b59","subtype":"command","commandType":"auto","position":18.0,"command":"# from pyspark.sql import SparkSession\n# from pyspark.sql.types import *\n# from pyspark.sql.functions import col\n# from pyspark.sql.functions import lit\n\n# spark = SparkSession.builder.appName('Empty_Dataframe').getOrCreate()\n\n# columns = StructType([StructField('TOTAL_ROW_COUNT',\n#                                   StringType(), True),\n#                     StructField('TODAYS_MERGED_COUNT',\n#                                   StringType(), True),\n#                     StructField('TABLE_NAME',\n#                                 StringType(), True),\n#                     StructField('DATABASE',\n#                                 StringType(), True)])\n\n# empRDD = spark.sparkContext.emptyRDD()\n\n# dffns1 = spark.createDataFrame(data = empRDD , schema = columns)\n\n# df_s_collect = dfstreamtablename.collect()\n# for row in df_s_collect:\n#     var_db = row[\"database\"]\n#     var_tn = row[\"tableName\"]\n#     dffns2 = spark.sql(f\"\"\"SELECT  COUNT(*) as TOTAL_ROW_COUNT ,(SELECT  COUNT(*) FROM {var_db}.{var_tn} WHERE date(EDA_Creation_date) = current_date()) as TODAYS_MERGED_COUNT FROM {var_db}.{var_tn}\"\"\")    \n#     dffns3 = dffns2.withColumn(\"TableName\",lit(var_tn))\n#     dffns4 = dffns3.withColumn(\"Database\",lit(var_db))\n#     dffns1 = dffns1.union(dffns4)\n# #display(dffn1)","commandVersion":1,"state":"error","results":null,"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":"Command skipped","errorTraceType":"html","error":null,"workflows":[],"startTime":1663160859625,"submitTime":1663160859625,"finishTime":1663160867532,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":null,"subcommandOptions":null,"contentSha256Hex":null,"nuid":"ff1a2ed7-ce5e-4699-9c76-92459a18dfd7"},{"version":"CommandV1","origId":2709619314155875,"guid":"83c14bfb-5400-47aa-a58b-eb0496e13df4","subtype":"command","commandType":"auto","position":19.0,"command":"#CREATE INDEX FOR STATS EXCEL\n\ncolumns = [\"Sr.No\",\"SHEETS\",\"DISCRIPTIONS\"]\ndata = [(\"1\", \"TotalNASrowCountPerFile\", \"Consist total row count and datafiles processed till date\"), (\"2\", \"TotalNAScountOfFilesPerTable\", \"Consist total of all datafiles per table processed till date\"), (\"3\", \"TotalNASrowPerTable\", \"Consist total rows on table level for all datafiles processed till date\"), (\"4\", \"CurrentNASrowCountPerFile\", \"Consist row count and datafiles processed for current run\"), (\"5\", \"CurrentNAScountOfFilesPerTable\", \"Consist datafiles per table processed for current run\"), (\"6\", \"CurrentNASrowPerTable\", \"Consist rows on table level for all datafiles processed for current run\"), (\"7\", \"HistoryTableStats\", \"Consist Stats related to Target History Tables\"), (\"8\", \"StreamTableStats\", \"Consist Stats related to Target Stream Tables\")]\n\ndfIndex = spark.createDataFrame(data).toDF(*columns)\ndisplay(dfIndex)","commandVersion":1,"state":"error","results":null,"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":"Command skipped","errorTraceType":"html","error":null,"workflows":[],"startTime":1663160859660,"submitTime":1663160859660,"finishTime":1663160867555,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"849","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":null,"subcommandOptions":null,"contentSha256Hex":null,"nuid":"6c574cd1-96ae-4538-9adf-8c36a43c3cc4"},{"version":"CommandV1","origId":2709619314155876,"guid":"fdb4c3af-bc34-452c-a527-a065021b21d7","subtype":"command","commandType":"auto","position":20.0,"command":"%md\n# Collect dataframes and write to excel","commandVersion":1,"state":"finished","results":null,"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":null,"subcommandOptions":null,"contentSha256Hex":null,"nuid":"6087180e-8532-4fda-84e1-5661c3f684a2"},{"version":"CommandV1","origId":2709619314155877,"guid":"08089985-d45a-4ea6-8da3-3ce3b7b55fb8","subtype":"command","commandType":"auto","position":21.0,"command":"dfCatalogue = dfIndex\nCurrentNASrowCountPerFile = newDf[[\"FileName\", \"TableName\", \"Row_Count_per_file\"]]\nCurrentNAScountOfFilesPerTable = newDf2\nCurrentNASrowPerTable = newDf3\nTotalNASrowCountPerFile = newDf_tot[[\"FileName\", \"TableName\", \"Row_Count_per_file\"]]\nTotalNAScountOfFilesPerTable = newDf2_tot\nTotalNASrowPerTable = newDf3_tot\nhistoryTableStats = dffn1\n#streamTableStats = dffns1\n","commandVersion":1,"state":"error","results":null,"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":"Command skipped","errorTraceType":"html","error":null,"workflows":[],"startTime":1663160859752,"submitTime":1663160859752,"finishTime":1663160867578,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":null,"subcommandOptions":null,"contentSha256Hex":null,"nuid":"220198c4-26ca-459d-878d-9ab7aba4ee27"},{"version":"CommandV1","origId":2709619314155878,"guid":"7169112c-452f-43a7-bdd6-a7c981bb4451","subtype":"command","commandType":"auto","position":22.0,"command":"#import pandas as pd\nimport datetime\n\ncurrentutctime = datetime.datetime.now().strftime('%Y%m%d_%H%M%S')\nfilenamewithtime = \"STATS_\" + currentutctime +\".xlsx\"\npartitions = datetime.datetime.now().strftime('%Y-%m-%d/')\n\nstatistics_loc_file = statistics_loc + \"/\" + partitions + filenamewithtime\n\ndfCatalogue.write.mode(\"append\").format(\"com.crealytics.spark.excel\").option(\"header\",True).option(\"dataAddress\",\"'INDEX'!A1:Z20000\").save(statistics_loc_file)\nTotalNASrowCountPerFile.write.mode(\"append\").format(\"com.crealytics.spark.excel\").option(\"header\",True).option(\"dataAddress\",\"'TotalNASrowCountPerFile'!A1:Z20000\").save(statistics_loc_file)\nTotalNAScountOfFilesPerTable.write.mode(\"append\").format(\"com.crealytics.spark.excel\").option(\"header\",True).option(\"dataAddress\",\"'TotalNAScountOfFilesPerTable'!A1:Z20000\").save(statistics_loc_file)\nTotalNASrowPerTable.write.mode(\"append\").format(\"com.crealytics.spark.excel\").option(\"header\",True).option(\"dataAddress\",\"'TotalNASrowPerTable'!A1:Z20000\").save(statistics_loc_file)\n\n\nCurrentNASrowCountPerFile.write.mode(\"append\").format(\"com.crealytics.spark.excel\").option(\"header\",True).option(\"dataAddress\",\"'CurrentNASrowCountPerFile'!A1:Z20000\").save(statistics_loc_file)\nCurrentNAScountOfFilesPerTable.write.mode(\"append\").format(\"com.crealytics.spark.excel\").option(\"header\",True).option(\"dataAddress\",\"'CurrentNAScountOfFilesPerTable'!A1:Z20000\").save(statistics_loc_file)\nCurrentNASrowPerTable.write.mode(\"append\").format(\"com.crealytics.spark.excel\").option(\"header\",True).option(\"dataAddress\",\"'CurrentNASrowPerTable'!A1:Z20000\").save(statistics_loc_file)\nhistoryTableStats.write.mode(\"append\").format(\"com.crealytics.spark.excel\").option(\"header\",True).option(\"dataAddress\",\"'HistoryTableStats'!A1:Z20000\").save(statistics_loc_file)\n#streamTableStats.write.mode(\"append\").format(\"com.crealytics.spark.excel\").option(\"header\",True).option(\"dataAddress\",\"'StreamTableStats'!A1:Z20000\").save(statistics_loc_file)","commandVersion":1,"state":"error","results":null,"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":"Command skipped","errorTraceType":"html","error":null,"workflows":[],"startTime":1663160859786,"submitTime":1663160859786,"finishTime":1663160867601,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":null,"subcommandOptions":null,"contentSha256Hex":null,"nuid":"3afd4a88-51d1-464a-8007-27a4bb2df0c8"}],"dashboards":[],"guid":"10f8fdb2-3a37-417d-bdd2-2947d9bc346f","globalVars":{},"iPythonMetadata":{"nbformat":4,"IPythonMetadata":{}},"inputWidgets":{"segregated_loc":{"nuid":"96a7faec-a056-4279-b695-76478d6df307","currentValue":"raw/ISU_archive/segregated","widgetInfo":{"widgetType":"text","name":"segregated_loc","defaultValue":"raw/ISU_archive/segregated","label":"SEGREGATED LOC","options":{"widgetType":"text","validationRegex":null}}},"env":{"nuid":"d5e73c86-69c8-4186-8b6b-b547e79e0773","currentValue":"10","widgetInfo":{"widgetType":"text","name":"env","defaultValue":"02","label":"ADLS ENVIRONMENT","options":{"widgetType":"text","validationRegex":null}}},"statistics_loc":{"nuid":"102a1507-a905-4f76-a10e-f277f5334e9e","currentValue":"ISU_archive_support/statistics","widgetInfo":{"widgetType":"text","name":"statistics_loc","defaultValue":"ISU_archive_support/statistics","label":"STATISTICS LOC","options":{"widgetType":"text","validationRegex":null}}},"staging_collected_loc":{"nuid":"803512c5-41e6-43b7-b26d-8d5eb03e9d91","currentValue":"raw/ISU_archive/staging_collected","widgetInfo":{"widgetType":"text","name":"staging_collected_loc","defaultValue":"raw/ISU_archive/staging_collected","label":"STAGING COLLECTED LOC","options":{"widgetType":"text","validationRegex":null}}}},"notebookMetadata":{"pythonIndentUnit":4},"reposExportFormat":"SOURCE"}